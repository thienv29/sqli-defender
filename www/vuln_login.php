<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ƒêƒÉng Nh·∫≠p L·ªó H·ªïng - Demo SQLi</title>
    <link rel="stylesheet" href="css/common.css">
    <link rel="stylesheet" href="css/vuln_login.css">
</head>
<body>
    <?php
    include 'nav.php';
    echo getNavbar('vuln_login.php');
    ?>

    <div class="container">
        <div class="header">
            <div class="title">
                üîì <div class="vulnerable-badge">L·ªñ H·ªîNG</div>
            </div>
            <div class="description">
                Demo ƒëƒÉng nh·∫≠p l·ªó h·ªïng SQL injection - So s√°nh v·ªõi ph∆∞∆°ng ph√°p b·∫£o m·∫≠t b√™n tr√°i
            </div>
        </div>

        <div class="demo-content">
            <div class="left-column">
                <?php
                $result = null;
                $error = null;

                if ($_SERVER['REQUEST_METHOD'] === 'POST') {
                    $conn = new mysqli('db', 'demo', 'demopass', 'demo');
                    if ($conn->connect_error) {
                        $error = "K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu th·∫•t b·∫°i";
                    } else {
                        $u = $_POST['username'] ?? '';
                        $p = $_POST['password'] ?? '';

                        // ‚ö†Ô∏è L·ªñ H·ªîNG: Gh√©p chu·ªói tr·ª±c ti·∫øp
                        $sql = "SELECT * FROM users WHERE username = '$u' AND password = '$p' LIMIT 1";
                        $res = $conn->query($sql);

                        if ($res && $res->num_rows > 0) {
                            $row = $res->fetch_assoc();
                            $result = "Ch√†o m·ª´ng quay l·∫°i, " . htmlspecialchars($row['username']) . "! üéâ";
                        } else {
                            $error = "Th√¥ng tin ƒëƒÉng nh·∫≠p kh√¥ng h·ª£p l·ªá";
                        }
                        $conn->close();
                    }
                }
                ?>

                <div class="vulnerable-section">
                    <h3 class="red">üö® PH∆Ø∆†NG PH√ÅP L·ªñ H·ªîNG</h3>
                    <p><strong>Gh√©p chu·ªói tr·ª±c ti·∫øp v√†o SQL query</strong></p>
                    <p><code>SELECT * FROM users WHERE username = '$u' AND password = '$p' LIMIT 1</code></p>
                </div>

                <form method="post" class="login-form">
                    <div class="form-group">
                        <label for="username" class="form-label">üë§ T√™n ƒëƒÉng nh·∫≠p</label>
                        <input type="text" id="username" name="username" class="form-input"
                               placeholder="Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p..."
                               value="<?php echo htmlspecialchars($_POST['username'] ?? ''); ?>" required>
                    </div>

                    <div class="form-group">
                        <label for="password" class="form-label">üîë M·∫≠t kh·∫©u</label>
                        <input type="password" id="password" name="password" class="form-input"
                               placeholder="Nh·∫≠p m·∫≠t kh·∫©u..." required>
                    </div>

                    <div class="form-actions">
                        <button type="submit" name="action" value="login" class="btn btn-danger">
                            <span>‚ö†Ô∏è</span>
                            <span>TH·ª¨ VI PH·∫†M</span>
                        </button>

                        <button type="button" onclick="showSQL()" class="btn btn-info">
                            <span>üîç</span>
                            <span>XEM SQL QUERY</span>
                        </button>
                    </div>
                </form>

                <?php if ($result): ?>
                    <div class="result-box result-success">
                        <?php echo $result; ?>
                    </div>
                <?php elseif ($error): ?>
                    <div class="result-box result-error">
                        ‚ùå <?php echo htmlspecialchars($error); ?>
                    </div>
                <?php endif; ?>

                <div class="payload-hint">
                    <div class="payload-title">üí° Th·ª≠ c√°c payload SQL injection:</div>
                    <div class="code-snippet">T√™n ƒëƒÉng nh·∫≠p: <code>' OR '1'='1 --</code> (Bypass login)</div>
                    <div class="code-snippet">T√™n ƒëƒÉng nh·∫≠p: <code>admin' UNION SELECT 1, version() --</code> (Extract version)</div>
                    <div class="code-snippet">T√™n ƒëƒÉng nh·∫≠p: <code>admin'; DROP TABLE users; --</code></div>
                </div>

                <!-- SQL Display Modal -->
                <div id="sqlModal" class="sql-modal">
                    <div class="sql-modal-content">
                        <div class="sql-modal-header">
                            <h3>üîç SQL Query ƒê∆∞·ª£c Th·ª±c Thi</h3>
                            <button onclick="closeSQL()" class="close-modal">&times;</button>
                        </div>
                        <div class="sql-modal-body">
                            <div class="sql-warning">
                                ‚ö†Ô∏è C·∫¢NH B√ÅO: ƒê√¢y l√† SQL query nguy hi·ªÉm! Input ch∆∞a ƒë∆∞·ª£c sanitize.
                            </div>
                            <div class="sql-display">
                                <div class="sql-label">Query s·∫Ω th·ª±c thi:</div>
                                <div class="sql-code-display" id="sqlDisplay"></div>
                            </div>
                            <div class="sql-explanation">
                                <p><strong>C√°ch ho·∫°t ƒë·ªông:</strong></p>
                                <p>Input c·ªßa b·∫°n ƒë∆∞·ª£c gh√©p <strong>TR·ª∞C TI·∫æP</strong> v√†o chu·ªói SQL m√† kh√¥ng c√≥ validation!</p>
                                <p>K·∫ª t·∫•n c√¥ng c√≥ th·ªÉ injection SQL commands v√†o database qua form n√†y.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="right-column">
                <h3 style="color: #dc3545; margin-bottom: 20px;">üîç C√ÅCH HO·∫†T ƒê·ªòNG</h3>
                <p><strong>SQL Injection</strong> x·∫£y ra khi ·ª©ng d·ª•ng web kh√¥ng validate input t·ª´ ng∆∞·ªùi d√πng tr∆∞·ªõc khi gh√©p v√†o SQL query.</p>
                <p>K·∫ª t·∫•n c√¥ng c√≥ th·ªÉ l√†m thay ƒë·ªïi logic c·ªßa query b·∫±ng c√°ch ch√®n SQL commands ƒë·ªôc h·∫°i.</p>
                <p>Trong ƒëo·∫°n code tr√™n, input <code>$u</code> v√† <code>$p</code> ƒë∆∞·ª£c gh√©p tr·ª±c ti·∫øp v√†o string SQL, t·∫°o l·ªó h·ªïng nghi√™m tr·ªçng.</p>

                <h3 style="color: #dc3545; margin-top: 30px;">üõ†Ô∏è C√ÅC T·∫§N C√îNG TH·ª∞C T·∫æ</h3>
                <ul>
                    <li><strong>Bypass Authentication:</strong> T·∫°o ƒëi·ªÅu ki·ªán lu√¥n ƒë√∫ng b·∫±ng <code>OR '1'='1</code></li>
                    <li><strong>Data Exfiltration:</strong> S·ª≠ d·ª•ng <code>UNION SELECT</code> ƒë·ªÉ tr√≠ch xu·∫•t d·ªØ li·ªáu</li>
                    <li><strong>Arbitrary Commands:</strong> Ch√®n l·ªánh nh∆∞ <code>DROP TABLE</code>, <code>UPDATE</code> thay ƒë·ªïi d·ªØ li·ªáu</li>
                    <li><strong>Blind SQLi:</strong> Khi response kh√¥ng hi·ªán data, ƒë·ªì ƒëo√°n d·ª±a tr√™n logic TRUE/FALSE</li>
                    <li><strong>Time-based Blind:</strong> S·ª≠ d·ª•ng ƒëi·ªÅu ki·ªán l√†m ch·∫≠m response ƒë·ªÉ li·ªát k√™ d·ªØ li·ªáu</li>
                </ul>

                <h3 style="color: #dc3545; margin-top: 30px;">‚ö†Ô∏è T√åNH HU·ªêNG TH·ª∞C T·∫æ ƒê√É X·∫¢Y RA</h3>
                <div class="real-case">
                    <strong>2011 - Sony Pictures Hack:</strong><br>
                    77 tri·ªáu t√†i kho·∫£n b·ªã ƒë√°nh c·∫Øp qua SQL injection. Hacker li√™n quan Tri·ªÅu Ti√™n, thi·ªát h·∫°i kinh t·∫ø h√†ng tri·ªáu USD.
                </div>
                <div class="real-case">
                    <strong>2014 - Heartland Payment Systems:</strong><br>
                    130 tri·ªáu th·∫ª t√≠n d·ª•ng b·ªã ƒë√°nh c·∫Øp do l·ªó h·ªïng SQL injection. C√¥ng ty ph·∫£i tr·∫£ c√°c kho·∫£n ph·∫°t l·ªõn v√† chi ph√≠ kh·∫Øc ph·ª•c.
                </div>
                <div class="real-case">
                    <strong>2017 - Equifax Breach:</strong><br>
                    147 tri·ªáu h·ªì s∆° c√° nh√¢n b·ªã l·ªô th√¥ng tin nh·∫°y c·∫£m (SSN, ng√†y sinh) qua SQL injection trong ·ª©ng d·ª•ng web c≈©.
                </div>
                <div class="real-case">
                    <strong>T·∫•n c√¥ng kh√¥ng ng·ª´ng v√†o WordPress:</strong><br>
                    H√†ng ng√†n site WordPress b·ªã hack h√†ng nƒÉm qua SQLi v√¨ plugin v√† theme l·ªói th·ªùi.
                </div>

                <h3 style="color: #dc3545; margin-top: 30px;">üí∞ THI·ªÜT H·∫†I</h3>
                <ul>
                    <li><strong>Leak th√¥ng tin nh·∫°y c·∫£m:</strong> M·∫≠t kh·∫©u, SSN, th·∫ª t√≠n d·ª•ng, email</li>
                    <li><strong>Thi·ªát h·∫°i t√†i ch√≠nh:</strong> Chi ph√≠ kh·∫Øc ph·ª•c, m·∫•t doanh thu, ph·∫°t vi ph·∫°m lu·∫≠t</li>
                    <li><strong>U·ªën m·∫•t uy t√≠n:</strong> M·∫•t l√≤ng tin c·ªßa kh√°ch h√†ng, t·ª∑ l·ªá h·ªßy b·ªè</li>
                    <li><strong>R·ªßi ro ph√°p l√Ω:</strong> Quy tr√¨nh ƒëi·ªÅu tra, ki·ªán t·ª•ng, ph·∫°t v∆∞·ª£t quy ƒë·ªãnh b·∫£o v·ªá d·ªØ li·ªáu (GDPR)</li>
                    <li><strong>Nguy c∆° b·∫£o m·∫≠t ti·∫øp theo:</strong> C√≥ th·ªÉ d·∫´n ƒë·∫øn ransomware ho·∫∑c t·∫•n c√¥ng m·∫°ng kh√°c</li>
                </ul>

                <h3 style="color: #28a745; margin-top: 30px;">üõ°Ô∏è GI·∫¢I PH√ÅP</h3>
                <ul>
                    <li><strong>Prepared Statements:</strong> S·ª≠ d·ª•ng PDO prepared statements ho·∫∑c mysqli::prepare() v·ªõi tham s·ªë r√†ng bu·ªôc</li>
                    <li><strong>Input Validation:</strong> Validate v√† sanitize t·∫•t c·∫£ input, whitelist k√Ω t·ª± cho ph√©p</li>
                    <li><strong>Parameterized Queries:</strong> Kh√¥ng bao gi·ªù gh√©p chu·ªói tr·ª±c ti·∫øp v√†o SQL</li>
                    <li><strong>Escape Functions:</strong> MySQLi_real_escape_string() (ch·ªß y·∫øu cho text, kh√¥ng ƒë·ªß an to√†n n·∫øu kh√¥ng d√πng ƒë√∫ng)</li>
                    <li><strong>T·ªëi thi·ªÉu h√≥a quy·ªÅn:</strong> Database user ch·ªâ c√≥ quy·ªÅn c·∫ßn thi·∫øt</li>
                    <li><strong>WAF - Web Application Firewall:</strong> Ph√°t hi·ªán v√† ch·∫∑n SQL injection patterns</li>
                    <li><strong>C·∫≠p nh·∫≠t v√† b·∫£o m·∫≠t:</strong> Lu√¥n c·∫≠p nh·∫≠t CMS, frameworks, s·ª≠ d·ª•ng HTTPS</li>
                    <li><strong>H·∫°n ch·∫ø t√≠nh nƒÉng:</strong> T·∫Øt c√°c stored procedures nguy hi·ªÉm, h·∫°n ch·∫ø system commands</li>
                </ul>

                <p><strong>K·∫øt lu·∫≠n:</strong> SQL injection d·ªÖ ph√≤ng ng·ª´a nh∆∞ng h·∫≠u qu·∫£ th·∫£m h·∫°i. Lu√¥n validate input v√† s·ª≠ d·ª•ng prepared statements!</p>
            </div>
        </div>

        <script>
        function showSQL() {
            const username = document.getElementById('username').value || '[t√™n_ƒëƒÉng_nh·∫≠p_tr·ªëng]';
            const password = document.getElementById('password').value || '[m·∫≠t_kh·∫©u_tr·ªëng]';

            const sql = `SELECT * FROM users WHERE username = '${username}' AND password = '${password}' LIMIT 1`;

            document.getElementById('sqlDisplay').textContent = sql;
            document.getElementById('sqlModal').style.display = 'block';
        }

        function closeSQL() {
            document.getElementById('sqlModal').style.display = 'none';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('sqlModal');
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }
        </script>

    </div>
</body>
</html>
